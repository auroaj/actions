name: Build base Container

on:
  push:
    branches:
      - push
  #   paths:
  #     - "base/**"
  #     - ".github/workflows/build-base-container.yaml"
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - "base/**"
  #     - ".github/workflows/build-base-container.yaml"

env:
  docker_image_base: us-docker.pkg.dev/shared-buckets-333815/base/k8s-base
  docker_image_wordpress: us-docker.pkg.dev/shared-buckets-333815/wordpress/k8s-wordpress
  docker_image_ssh: us-docker.pkg.dev/shared-buckets-333815/k8s-ssh/k8s-ssh
  docker_image_amp: us-docker.pkg.dev/shared-buckets-333815/amp/k8s-amp
  ols_version: "1.7.15"
  php_version: "7.4.28"
  wp_version: "5.9.2"
  wp_sha1: "19653440effafce0f768a1ba5092710717835bdc"

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Cache Docker layers
#         uses: actions/cache@v2
#         with:
#           path: /tmp/.buildx-cache
#           key: base-buildx-${{ github.sha }}
#           restore-keys: |
#             base-buildx-

# #      - name: Validate Vulnerabilities using Container Scan
# #        uses: Azure/container-scan@v0
# #        with:
# #          image-name: ${{ env.docker_image }}:prod

#       - name: Login to GAR
#         uses: docker/login-action@v1
#         with:
#           registry: us-docker.pkg.dev
#           username: _json_key
#           password: ${{ secrets.GCR_SERVICEACCOUNT }}

      - name: Set short sha
        id: vars
        run: |
          sleep 10
          echo "hello!"
          echo "::set-output name=sha_short::${GITHUB_SHA::7}"

      # - name: For PR build and push base image
      #   if: github.event_name == 'pull_request'
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./base
      #     build-args: |
      #       OLS_VERSION=${{ env.ols_version }}
      #       PHP_VERSION=${{ env.php_version }}
      #     push: true
      #     file: base/Dockerfile
      #     tags: ${{ env.docker_image_base }}:${{ steps.vars.outputs.sha_short}}
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new

      # - name: For PR build and push wordpress image
      #   if: github.event_name == 'pull_request'
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./wordpress
      #     build-args: |
      #       WP_VERSION=${{ env.wp_version }}
      #       WP_SHA1=${{ env.wp_sha1 }}
      #       BASE_TAG=${{ steps.vars.outputs.sha_short}}
      #     push: true
      #     file: wordpress/Dockerfile
      #     tags: ${{ env.docker_image_wordpress }}:${{ steps.vars.outputs.sha_short}}
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new

      # - name: For PR build and push SSHD
      #   if: github.event_name == 'pull_request'
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./sshd
      #     push: true
      #     file: sshd/Dockerfile
      #     tags: ${{ env.docker_image_ssh }}:${{ steps.vars.outputs.sha_short}}
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new

      # - name: For PR build and push AMP
      #   if: github.event_name == 'pull_request'
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./amp
      #     push: true
      #     file: amp/Dockerfile
      #     tags: ${{ env.docker_image_amp }}:${{ steps.vars.outputs.sha_short}}
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new

      # - name: For merge build and push base and tag as prod
      #   if: github.event_name == 'push'
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./base
      #     build-args: |
      #       OLS_VERSION=${{ env.ols_version }}
      #       PHP_VERSION=${{ env.php_version }}
      #     push: true
      #     file: base/Dockerfile
      #     tags: ${{ env.docker_image_base }}:prod
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new

      # - name: For merge build and push wordpress and tag as prod
      #   if: github.event_name == 'push'
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./wordpress
      #     build-args: |
      #       WP_VERSION=${{ env.wp_version }}
      #       WP_SHA1=${{ env.wp_sha1 }}
      #     push: true
      #     file: wordpress/Dockerfile
      #     tags: ${{ env.docker_image_wordpress }}:prod
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new

      # - name: For merge build and push SSHD and tag as prod
      #   if: github.event_name == 'push'
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./sshd
      #     push: true
      #     file: sshd/Dockerfile
      #     tags: ${{ env.docker_image_ssh }}:prod
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new

      # - name: For merge build and push AMP and tag as prod
      #   if: github.event_name == 'push'
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./amp
      #     push: true
      #     file: amp/Dockerfile
      #     tags: ${{ env.docker_image_amp }}:prod
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new

      # - name: Move cache
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache
